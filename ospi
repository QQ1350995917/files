1.输入命令 

sudo nano /etc/apt/sources.list       //打开该文件编辑

2. 把文件里面的
deb http://raspbian.raspberrypi.org/raspbian/ stretch main contrib non-free rpi
改为
#deb http://raspbian.raspberrypi.org/raspbian/ stretch main contrib non-free rpi

3.在文件末添加一行：
deb http://mirrors.shu.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi

4.保存文件（Ctrl-O, then Ctrl-X）

5.再运行该命令：sudo apt-get update && sudo apt-get -y dist-upgrade && sudo apt-get update

sudo apt-get install vim 
sudo apt-get install lsof


sudo apt remove openjdk-8-jdk-headless:armhf ca-certificates-java openjdk-8-jre-headless:armhf openjdk-8-jre:armhf default-jre-headless
sudo apt-get install ca-certificates-java
sudo apt-get install openjdk-8-jre-headless
sudo apt-get install openjdk-8-jre # Optional, enables Java GUI apps


sudo apt-get install ffmpeg



开机启动
修改 rc.local 文件 , 命令如下 : 

sudo nano /etc/rc.local
在文件末尾 , exit 0 这一行之前，加入需要启动的命令 : 

sudo /home/pi/tomcat/bin/startup.sh #自己定义的命令即可 如 : sudo /home/pi/startMyProgram.sh


#install nginx  
01 安装 nginx 和 nginx-rtmp 编译依赖工具
sudo apt-get install build-essential libpcre3 libpcre3-dev libssl-dev
02 创建工作目录
mkdir ~/nginx-rtmp
cd ~/nginx-rtmp

03 下载nginx 和nginx-rtmp源码
wget http://nginx.org/download/nginx-1.10.3.tar.gz
wget https://github.com/arut/nginx-rtmp-module/archive/v1.1.10.tar.gz

04 解压
tar -zxvf nginx-1.10.3.tar.gz
tar -zxvf v1.1.10.tar.gz

05 切换目录
cd nginx-1.10.3

06 编译nginx-rtmp模块到nginx
./configure --with-http_ssl_module --add-module=../nginx-rtmp-module-1.1.10

07 编译安装
make
sudo make install

08 配置 nginx-rtmp 服务器
打开 /usr/local/nginx/conf/nginx.conf 
在末尾添加如下 配置

rtmp {
    server {
        listen 1122;
        chunk_size 4096;
        ping 30s;
        notify_method get;
        application hls {
            live on;
            hls on;
            hls_path /var/www/hls;
            hls_fragment 5s;
            hls_cleanup off;
        }
    }
}

http节点添加
#HLS配置开始,这个配置为了`客户端`能够以http协议获取HLS的拉流
        location /hls {
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root html;
            add_header Cache-Control no-cache;
        }
#HLS配置结束        




















